{"version":3,"sources":["components/Jumbotron/Jumbotron.jsx","util/api.js","components/Search/Search.jsx","components/EmployeeTable/EmployeeTable.jsx","App.js","reportWebVitals.js","index.js"],"names":["style","jumbotron","background","Jumbotron","className","id","axios","get","input","color","Search","props","onChange","handleInputChange","value","search","name","type","placeholder","EmployeeTable","state","results","employeeList","event","target","lookUp","toLowerCase","setState","sortFirstName","filteredEmployees","sort","a","b","first","EmployeeList","reverse","sortLastName","last","API","then","res","data","console","log","catch","err","this","onClick","map","employeeDirectory","includes","src","picture","medium","alt","location","city","email","phone","login","username","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce60e443.chunk.js","sourcesContent":["import React from 'react'\n\n// Styling\nconst style ={ \n    jumbotron:{\n        background: \"goldenrod\",\n    }\n}\nfunction Jumbotron() {\n    return (\n        <div>\n            <div style={style.jumbotron} className=\"jumbotron jumbotron-fluid mb-2\" id=\"jumboTron\">\n                <div className=\"container mb-0\">\n                    <h1 className=\"text-center\">Company Directory</h1>\n                    <p className=\"lead text-center\">Search for employees</p>\n                </div>\n            </div>\n        </div>)\n}\nexport default Jumbotron; ","import axios from \"axios\";\nconst BASEURL = \"https://randomuser.me/api/?results=30&nat=us\";\n\n//Calling API\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    apiSearch : function () {\n        return axios.get(BASEURL);\n    }\n}","import React  from 'react'\n\nconst style = {\n    input: {\n        color: \"black\",\n        background: \"goldenrod\"\n    }\n}\n\nconst Search = (props) => {\n    return (\n        <form> \n            <div className=\"form-group my-2\">\n                <div className=\"input-group-lg\">\n        <input \n        style={style.input}\n        id=\"search\"\n        className=\"form-control \"\n        onChange ={props.handleInputChange}\n        value={props.search}\n        name=\"search\"\n        type=\"text\"\n        placeholder =\"Who are you looking for?\"\n        />\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default Search\n","import React from \"react\";\nimport API from \"../../util/api\";\nimport Search from \"../../components/Search/Search\";\n\nclass EmployeeTable extends React.Component {\n    //State\n    state = {\n        search: \"\",\n        results: [],\n        employeeList: \"\",\n    }\n\n    // Call randomuser API\n    componentDidMount() {\n        API.apiSearch()\n            .then(res => {\n                this.setState({ results: res.data.results })\n                console.log(this.state.results)\n            }).catch(err => console.log(err))\n    };\n\n    //handleInputChange for Search\n    handleInputChange = event => {\n        if (event.target.name === \"search\") {\n            const lookUp = event.target.value.toLowerCase();\n            this.setState({\n                search: lookUp\n            })\n        }\n    }\n\n    //Option 1 - Sort by First Name\n    sortFirstName = () => {\n        const filteredEmployees = this.state.results.sort((a, b) => {\n            if (b.name.first > a.name.first) {\n                return -1;\n            }\n            if (a.name.first > b.name.first) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        });\n        if (this.state.EmployeeList === \"DESC\") {\n            filteredEmployees.reverse();\n            this.setState({ EmployeeList: \"ASC\" });\n        } else {\n            this.setState({ EmployeeList: \"DESC\" })\n        }\n        this.setState({ results: filteredEmployees })\n    };\n\n    // --------------------Breaking up Code For Readability-----------------------------------------\n\n    //Option 2 - Sort by Last Name\n    sortLastName = () => {\n        const filteredEmployees = this.state.results.sort((a, b) => {\n            if (b.name.last > a.name.last) {\n                return -1;\n            }\n            if (a.name.last > b.name.last) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        });\n        if (this.state.EmployeeList === \"DESC\") {\n            filteredEmployees.reverse();\n            this.setState({ EmployeeList: \"ASC\" });\n        } else {\n            this.setState({ EmployeeList: \"DESC\" })\n        }\n        this.setState({ results: filteredEmployees })\n    }\n\n    // --------------------Breaking up Code For Readability-----------------------------------------\n\n\n    //RENDER - Implementing Ternary Operator (Test First)\n    render() {\n        return (\n            <div>\n<div className=\"container mx-auto\">\n                <Search handleInputChange={this.handleInputChange} search={this.state.search} />\n                <div className=\"table\">\n                    <table className=\"table-responsive table-dark text-centered\">\n                        <thead>\n                            <tr>\n                                <th>Employee Badge</th>\n                               <th>First <button className=\"\" onClick={this.sortFirstName}>SORT</button></th>\n                                <th>Last <button className=\"btn-small \" onClick={this.sortLastName}>SORT</button></th>\n                                <th>Location</th>\n                                <th>Email</th>\n                                <th>Phone</th>\n                            </tr>\n                        </thead>\n\n\n                        { //Option 1 - Be sure to include this.state.results, then map otherwise sticking of button occurs\n                            this.state.results && this.state.results.map(employeeDirectory => employeeDirectory.name.first.toLowerCase().includes(this.state.search) ?\n                                < tbody key={employeeDirectory.login.username}>\n                                    <tr>\n                                        <td><img src={employeeDirectory.picture.medium} alt=\"employeeBadge\" /></td>\n                                        <td>{employeeDirectory.name.first}</td>\n                                        <td>{employeeDirectory.name.last}</td>\n                                        <td>{employeeDirectory.location.city}, {employeeDirectory.location.state}</td>\n                                        <td>{employeeDirectory.email}</td>\n                                        <td>{employeeDirectory.phone}</td>\n                                    </tr>\n                                </tbody>\n\n                                :\n                                // Option 2\n                                employeeDirectory.name.last.toLowerCase().includes(this.state.search) ?\n                                    < tbody key={employeeDirectory.login.username}>\n                                       <tr>\n                                        <td><img src={employeeDirectory.picture.medium} alt=\"employeeBadge\" /></td>\n                                        <td>{employeeDirectory.name.first}</td>\n                                        <td>{employeeDirectory.name.last}</td>\n                                        <td>{employeeDirectory.location.city}, {employeeDirectory.location.state}</td>\n                                        <td>{employeeDirectory.email}</td>\n                                        <td>{employeeDirectory.phone}</td>\n                                    </tr>\n                                </tbody>\n                                    :\n                                    null\n                            )}\n                    </table>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n};\n\nexport default EmployeeTable;","import React from 'react'\nimport Jumbotron from \"./components/Jumbotron/Jumbotron\";\nimport EmployeeTable from './components/EmployeeTable/EmployeeTable';\n\n\nfunction App () {\n      return (\n      <div>\n        <Jumbotron />\n       <EmployeeTable />\n        \n      </div>\n    )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}